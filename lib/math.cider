import trigonometry {pi, sin, cos, tan, acos, asin, sinh, cosh, tanh, atan,
                     atan2}

link "m"

class Num a {
  has Eq a
  fn from_int(Int) a
  fn +(a, a) a
  fn *(a, a) a
  fn -(a, a) a
  fn /(a, a) a
  fn abs(a) a
  fn negate(a) a
}

class Bounded a {
  fn min_bound() a
  fn max_bound() a
}

instance Bounded Int {
  fn min_bound() => __builtin_min_int
  fn max_bound() => __builtin_max_int
}

fn even(x Int) Bool => x % 2 == 0
fn odd(x Int) Bool => x % 2 == 1
fn sqrt(x Float) Float => ffi sqrt(x)

fn sum(xs) {
  var s = from_int(0)
  for x in xs {
    s += x
  }
  return s
}

class Semigroup a {
  # Gives associativity
  fn (<>)(a, a) a
}

class Monoid a {
  # Gives identity
  has Semigroup a
  fn identity() a
}

class Group a {
  # Gives inverses
  has Monoid a
  fn inverse(a) a
}
