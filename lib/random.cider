link pkg "libsodium"

fn rand() Int {
  # This is probably the most inefficient random number generator in the history
  # of computing.
  # TODO: implement stack buffers, or allow stack pointers to escape (or be
  # borrowed) down the stack.
  let cb = sizeof(Int)
  let pb = alloc(cb) as *Char
  ffi randombytes_buf(pb, cb)
  let x = (pb as! *Int)[0]
  if x < 0 {
    return -(x as! Int)
  } else {
    return (x as! Int)
  }
}
