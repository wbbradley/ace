# test: pass
# expect: 222335543222

import complex {Complex}

struct Rect {
   x0 Float
   y0 Float
   width Float
   height Float
}

struct Vec2D {
    x Float
    y Float
}

fn lerp2d(rect, x, max_x, y, max_y) (Float, Float) {
    return (
        rect.width * from_int(x) / from_int(max_x) + rect.x0,
        rect.height * from_int(y) / from_int(max_y) + rect.y0)
        
}

fn main() {
    let window_x = 50
    let window_y = 50
    let frustrum = Rect(-3.14159265, -2.5, 5.0, 5.0)

    for y in [0..window_y-1] {
        for x in [0..window_x-1] {
            let (x, y) = lerp2d(frustrum, x, window_x, y, window_y)
            let c = Complex(x, y)
            var z = c
            for i in [0..] {
                z = (z * z) + c
                let Complex(a, b) = z
                if a * a + b * b > 16.0 or i >= 100 {
                    if i != 0 {
                        let String(sz, length) = str(i)
                        putch(sz[0])
                    } else {
                        putch(' ')
                    }
                    break
                }
            }
        }
        putch('\n')
    }
}
